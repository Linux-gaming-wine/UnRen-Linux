#!/bin/bash
# --------------------------------------------------------------------------------
# Unren.bat Windows + UnRen-Ultrahack to Linux conversion
# --------------------------------------------------------------------------------
version=1.0.9.9.1
versiondate="(221006)"

# --------------------------------------------------------------------------------
# START LICENSES
# --------------------------------------------------------------------------------
# unrpyc
# https://github.com/CensoredUsername/unrpyc
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# The license of codegen.py is included in the file itself.
# --------------------------------------------------------------------------------

# --------------------------------------------------------------------------------
# rpatool
# https://github.com/Shizmob/rpatool
# 
# DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
# Version 2, December 2004
# 
# Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>
# 
# Everyone is permitted to copy and distribute verbatim or modified
# copies of this license document, and changing it is allowed as long
# as the name is changed.
# 
# DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
# TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
# 
# 0. You just DO WHAT THE FUCK YOU WANT TO. 
# --------------------------------------------------------------------------------

# --------------------------------------------------------------------------------
# UnRen-Linux
# https://github.com/zujik/UnRen-Linux
# 
# MIT License
# 
# Copyright (c) 2022 Troy Dallas
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------------------
# END LICENSES
# --------------------------------------------------------------------------------


# --------------------------------------------------------------------------------
# The following variables are Base64 encoded strings for unrpyc and rpatool
# Due to batch limitations on variable lengths, they need to be split into
# multiple variables, and joined later using powershell.
# - Adapted from Windows BAT for BASH to keep the layout as much as the same

# --------------------------------------------------------------------------------
# unrpyc by CensoredUsername 2f9810c 2022-03-31 v1.1.8 (Python 2)
#   https://github.com/CensoredUsername/unrpyc
#
# Added changes proposed by sigio for improved Ren'Py 7.5+ compatibility
#   https://github.com/CensoredUsername/unrpyc/pull/154/files
#
# Edited to remove multiprocessing and adjust output spacing 44febb0 2019-10-07T07:06:47.000Z
# 
# Based on UnRen.bat by Sam
#   https://f95zone.to/threads/3083/
#   https://github.com/F95Sam/UnRen
#
# Added changes from UnRen-ultrahack by VepsrP
#   https://f95zone.to/threads/92717/
#   https://f95zone.to/members/vepsrp.329951/

# --------------------------------------------------------------------------------
decompcab01=TVNDRgAAAACK3AAAAAAAADAYAAAAAAAAAwEBAAsABAAMNwAAABg
decompcabd5oAAAAAAAAAACNVNZAgAF9faW5pdF9fLnB5AHcsAAB3mgAAAAANVYp7IABhc3RkdW1wLnB5ALGTAADuxgAAAACRVGK7IABjb2RlZ2VuLnB5ACcoAACfWgEAAAA1VK4+IABkZW9iZnVzY2F0ZS5weQDLbAAAxoIBAAAADVWdeiAAbWFnaWMucHkAnHcAAJHvAQAAAJFUhbsgAHNjcmVlbmRlY29tcGlsZXIucHkAmkoAAC1nAgAAABlVm6UgAHNsMmRlY29tcGlsZXIucHkAYRQAAMexAgAAAJFUM74gAHRlc3RjYXNlZGVjb21waWxlci5weQCzFQAAKMYCAAAAI1WhnCAAdHJhbnNsYXRlLnB5AG07AADb2wIAAAAZVV0EIAB1bnJweWMucHkAYT4AAEgXAwAAACNVKZAgAHV0aWwucHkAcS0kU4QfAIBDS+w8/XPbNpY/n/4KLD0ZSVNGdZy2N/VUO6fYSqOtY3tsZXOZrEcDkZDFhiJZfljRdvq/33sPIAmApOQ43du5mcvtXC0QeHjv4X0CDzhiZ3GyS4P7dc4G3pCdHL84YR+KNGC/jNittw5FFom0d9Q7Ytci3QRZFsQRCzK2FqlY7th9yqNc+C5bpUKweMW8NU/vhcvymPFoxxKRZjAgXuY8iILonnHmwYQADvrmawCUxat8y1MB3X3Gsyz2Ag4QmR97xUZEOc9xxlUAmLBBvhbMuVUjnCFN4wseArwgYvi1/Mi2Qb6Oi5ylIsvTwEMoLnTywsJHPMrPYbAJ1Bw4nDiRATgAXGRAB2Lrsk3sByv8ryDikmIZBtnaZX6AwJdFDo0ZNnoiwlFAy7dxyjIRImoAIwDsieIaQ+qF8yTI2FyxKsOW7TremNQEiNOqSCOYVtAoPwbW0ay/Ci/HFhywisMw3iKBXhz5AdKVndLyzeErX8YPgkiSKx7FOWAs8cC1SOolVp+yNQ9DthSKczB1EAEwbCypShGHLAc5CHjIkjilSW1qRxKJN1N2e/V6/n5yM2WzW3Z9c/X32fn0nDmTW/jtuOz9bP7m6t2cQY+byeX8A7t6zSaXH9gvs8tzl03/+/pmenvLrm4A2Ozt9cVsCq2zy7OLd+ezy5/ZKxh5eTVnF7O3szmAnV/RlArYbHqL4N5Ob87ewM/Jq9nFbP7BBVCvZ/NLhPv66oZN2PXkZj47e3cxuWHX726ur26ngMI5AL6cXb6+gXmmb6eX8xHMC21s+nf4wW7fTC4ucDKANnkHNNwgluzs6vrDzeznN3P25urifAqNr6aA3eTVxVROBqSdXUxmb112Pnk7+XlKo64ADlKIHSWO7P2bKTbinBP439l8dnWJxJxdXc5v4KcLtN7Mq8HvZ7dTl01uZrfIltc3V2+RTGQsjLkiMDDycirhINPNtYEu+Pvd7bQCyc6nkwuAdouDJaFl91Gvt0pBZBeLVZEXqVgsWLBBSWBFFHixLxZhkIuU
decompcab03=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
decompcab04=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
decompcab05=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
decompcab06=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
decompcab07=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
decompcab08=Zv/a5s0ML/epJAQjwTLgxazRVZ416sM5+mKRwEyd9COHvkTDClozRcpcWzm4R857Uu7Cbgusgc/G4Ypq4XLmUlWRwOViThoGiHK4ogix6SVMY6vO0lnT1acyyvkCl7PIaYZe1liPNDnYHdc3LvEFySQBu6sTCiShr+bzTaDT53koyRIYjFruKgdNa+72lnlIESKcUXSmS71i8GEnmFBxTuymWZTCIWP68ud5P8owDOaANkV7JN/X2KaMH0Gn07T4bC5L8QHeJzVRguTZyRdXCbU+XINUYVx45Ae3SV5rDS228rDJkk7s0uXDXLrqgjLw53nnWrvavyrp30cjS7DLZ9/U9zxyKE8dEQPyBZAFsgOiKyqTu4hCobTlbGKRtQNtXEG1WY1a1b5LtnBU5GkVOnltTMF0sM0NpmK95dMEyTU2qPeZitiT8Ylnhaeb/yK3pKU/vo6CMYVrxePxar7Ol/Xcc52xv8CC9Q6aJTXwq4QqRWLZJawxEIYg9oaO35l1nIbQxGh9ea12gxNH4BaQ3LyKKOk9el3p9UZXXBhGa5utCxBkUKfjfDXkyWOFNa9pMdOw3R6feLejifcggtq+fTIh9VAQI1ud1LBYC1Se37OQgx0qLyObFvSfoe00vFjNTEBsH76FuQAblVC6GiHRq5kkpZQ30/ihVJwo4qPy0lxNm55T92aytmlhm7apGy3sokxBio2+ipLU8Frx11sjqnFwN9/f6r2toQPtT9G37CEO/rNc7vwaR1OFv2+agULX/BSQHK59VwLWzFtQJe7CNBf+Jnmb7OPaPK3SwC9K8WsEm3ZebJsgq/m/Gyb01poJF+tjP0Rh4xRa5HysvTDwCtlxeulMYp95JVIL6LmfKvhyS1yOSpCV4PMNQo2Vo3CiJYhKp5E5Z5sk8CrN/fDAySOyWjdx8SIbtvQXqEx0pNvyyLcwN5SzqfCQP98oR4V5lpSQMx2m2QimpVm3pyWxDwCmvYMxY/M1K3Nb47azv7u/5xzCDsHpnrxLcMq3/s4j+O4ci1knicj0htMcrZ3ZwsMCWeh355PDPvqXzdAOE1MBQcDoBBrEI2RHkflEf6n5ekf4owGgJJ4u7zxRY95LkngckCvAJB4TU8O55bDMYILO377TuBAtGm3qZuJ74Q7lScC38qUqj77w0eeFsmS7QmWC45CvyceD+8DmtBDJDkURrLBqKY7WxXRbwRT/69Pk5qtRGCTXLtp4RdSAi4oZFFQjbAVz+ZZdqHBoACPArGjTzAhdRqoY1wjGIJaKvNzurpHV12cT4JimwEdAt4x9kxiWjnr9DX3eRNjENMbCNuQvH0eTgIrHHtD2XWK58FH82acp8YbDqUbRmsaBezFPt1i8Sq49ThwnlE0oLO4gyQnVrBakkkJnT3RBx4T45HBuzLbDgzjuORdnby7fdwc9p3/hnA/Ofukf9Y6cRvcCfjdc533/8vjs3aUDXwy6p5cfnbM3Tvf0o/PX/umR6/Q+nA96FxfO2QCA9d+en/R78LR/enjy7qh/+rPzGlqenl06J/23/UsAe3lGXQpg/d4FgnvbGxwew8/u6/5J//KjC6De9C9PEe6bs4HTdc67g8v+4buT7sA5fzc4P7vowRCOAPBp//TNAPrpve2dXnagX3jm9H6BH87FcffkBDsDaN13MIcBjtI5PDv/OOj/fHzpHJ+dHPXg4esejK77+qTHncHUDk+6/beuc9R92/25R63OAA7OED/kMTrvj3v4EPvswv8OL/tnpziZw7PTywH8dGGug0vV+H3/ouc63UH/ApflzeDsLU4TFxbanBEYaHnaYzi46Nm9gU/w97uLngLpHPW6JwDtAhvzROXnnR34hygGOIQnlVQIcOATdYoBceCkwMGeIc6Q1sGbeRRedRPFd0ghpqtkLA4iCbm/r3z290/iWyzTPgZK6y/WfDaRpWFBVoDp4AC6izFm2xgDw023FhDQ5XKNWVPmod/BI7Dwm0nqIbu8g0O09OcJUo9VNPfGN0JAdhbz9djhexNQ1xmcfzzcp8JRkeNhL5998ZZzA6BORUw6zcECM/a9WyBbC3/qI+9DVBFIXhhjkTE+k5y1UaoIKa0jECsxCvxSxiO5mENlfI1fTbBwIFBf/I84Z6IhcLkdBgy8G57SGY6UyvKNaKQwfR9In4/FyVC0/yMMRk/5Xk5wV+A4k3crrYF3RyMAgC3eBB+I5iRBd621rGSLABwJgHYvhjnNcAdioRegWYR+NFtei1lHpKKmzdjFLsmhmXciphpQi/VcLcLEW3pM3mGhEVaHMY08xVZzaLH0kShxnFDorcmBdUrpGl88x3pxC3jx1Af0mgPVvfa/PCWHbXjoZudPd4S/HOMSvvfTMtUBmVR4XRZrMa6EtoCclvFJQPuwhrkjLorKIHEi/8J+5N8woNV4KX/xMHdol8dAvn0u+S0rphyij6S/4PeYrPN2HlCqBH59682CsQS1ihBt6Sz2FD6QMx0fgbSgOK5PaxqPfnNpRaO47Tz9ySH/dd6htcOhk78g79pbLIjtEDP0gnCn94HIDpI58pJFJk/hYEvml0u/kg6hU2ZHhFA8xaEe8XaXDpVG5srFwMFmx8rgqDCpPswOlyJPv4C/A+SIhcpqTeWOyfkcegomvjikxEMjAKxrftQ7HHw8z051Isesppp+VThVpFCTiTMDjuophWxNg7EzBqyCnZUHHw7Qt+oAwI8whv1lphJ3FcghMllmm2/NFtDZf6nt0DdniNs9RDRpTXnvxfgbjQb99wIPq2rKMU1M1AX5EIwWvF7Bfa/RyQyYaSfx/ZuWKJ1OR/iVgwVoPWmHw1zQ8PjTwd7uFTrqjJqD3un5RyC1h/vNlKc10bDV6EfS0f+YHIIbgj2exwkxPFiGkevXEqGFn3//B3/BSajUd0+cvX3nJXse41B0MQRaBhOXa127gnih9Z+ObofvilbjZb/fB6aF5qHAHmR7uMrIVS0rZHJgbO26Dv7PUJBpaQCloz0V4H4iR/WTdQb2tXu9iG/8iCkyXMuLdUOTLWi5PvEAr9BPODvGtBaImh6sNBcmz2rSy/tlN26xlCvk43ckQtB7lDUD/jYpg/kuYtaBGgUTCSa3ZWpWV/p5pD3jlTwwVvSq/PCg1ny8rn98yNOC2tgOipz1f2Q8WPOzPdEhsP0mWc2R7CfOHoGQC1B+9OghJm5JlbT8Bd5QHb5g8C5kfOLN5axH9IGPo6k/zknAnuSSN/KYX0B2RA5X24/ydWe8gVs82mTt4W5OBI8G9/kM6TumucNrU3CXwH18Fo8FarLw39mAoJkEaNdOb569cF7aDqvnjtyxO3F9d+rO3Gs3sJMa/ldOcJ69yBIcLw3nJdPwPv05wz/Z0X8Ejcb407fQnf+0H/qdWocebutwgiFm04C8kq4z5Fojzv+mzf+mzQ9Dm5G6bE8hpqvxDVACSnapkQO1GlLLMo8xv+Adp2cnkcpLAlHYGj4hQQFXahSTpEXwgiW7xYGsClAxxpE+C+P4RrqZAq1kaep6Fd0kyp1nYzpEKzaUmCDC2HYyUWoLJIUthZrOU2cvGxlCWxAQY9b49cv3PzSy2CtT4mRLAGBZBtGw7Tx29r97AfuWPsQjd0VhZ8/2EPBuFUxjIlpQ2Q6HodE6qSg9nJ3Cfy67rTdPe8tcfwpSwR2oiMeBnkKt+ErMTCXTgZoA/TJO1k9EKPi7dtnR+ptAcXW3EnWlWNlr0Y9xtfJDOma40VcoHCgBRhdn6PjQpFHxmQZ5ZtZLAN2OXUjltMIxgHxuGYLwhMJcI4TADW80hlbd14dHvTe7e/vPnn/34vsffmzogZjQmsIrWno5CH0IRXPD7mluE7/VgPE0MhPjNHOBHjtcZ14s59ef2uw6+O0mvI3i+e+LZLn6fPdl/QdP9+fj/n//9eTt6dn5/wwuLt/98v7Dx7+lS/Dk21e/Rg+zDjzkzujFc7EYuU3eci1YJTNklUz5kiD5CNjd98s+cyzi0Ut48sPu/SYa+XeChGb2PKMy2mj3VdyegMuAi78Vv8X3cDJxmThMdhgkwwjZ6FDI68Zl1o28cP2Hzyo2dUXpWZtZOEe+KmYrgRYlH8Gh5ZvlSFoOWaRHwcJbo/WGrkY0Ggg93lDENidD1jqiOs4XlhWhNIRHcLPd4cXoyaok6KJMLnxwBSIo1liiSYBe94EArsZjP5muQteRVTQpB1SkKSZl31LhKfWm8cKbsYoxvSctF6W4ytVVube7L4xx6Xdy8/jbKsXEI6lIZdmO3OVQS4o6qFses8FI6GFIsMWrW9JXitYwCFZdBQnzJKRt1tkCFJq0e+FuaNOqWGZkvfEya5u/+CT42jde/p460q+ndAVVTP5otaRwqwVq6Vnx7yVKUEakZQWczgWL06IPfscmi4gAUREwDpTi+Qsz5cTeLqs7JWY8cZ4Dy/KjeCgTBiw9s7aOGII+0zekHYsBza9BHNfHu6lcJzBvb/cARpwNlib7vsaUCgEb/m98rYqqYUaP+VqmgMKAarSb/sV0+G5pQuEI/3z+whQQWzMYjesEWenHEBhNkSa/NKyhEyp8wOcREzSXmBc2WNI00IjDjDkM2Q8nyV/0ZRQIPWqXoP/Yhv8GPiisxmM93nTwQZSWW+KjPRU57UEuafyphy0/VpJs9uroWzQ80MfVQXMKzqrV6DSqN7awP6G+nwfjm9CvPrt43eH+Db1kqW64SeDNohi9KYC3b3SXS/9WmIPQ3C9NhT6t/0FDyDZyFRMK0lpKYWhKidCkxAdDTG0SJQKBwC3NopFJESL2RzOOQLeG/kRNQnL9DWEBXTvfJIK2HcCfDZCHWqqjznCIHhfDoev4HbxG4HYrTShU3g3frNRHvgsjDZpcv443
decompcab09=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
decompcab10=jeFo9/Gi0mXvQVwlz8rel+bmjWa+2pJ+kMbvYnQBzxvuJocQNZvt4HZu8vJ6OF3SR9PY0U5vX6K7KUXvRG/CcrXhCOAkCcKnTrXBly64cxg7joDHe7kna8R7t1+u15t9sgBvKqtekIhgdrM3E3NBDnDKLrEXJUN1V9t50AcyVQ21bNowhM4WRgg0PNRdMG9JH9M8075MRBQMsDVbTs6MQ8m6Se/C8ijncpWgMbQg5vcKfdhHXLcBnwHw4B9/4zD/h1BwaXqxXS75guDhxS7ZcE30A6JFrmNM2CYvBpTai9MV+A/oirY7Qd/vwey9FXDiCKTNE6+TTnvZ3FdO3bnVuLUdGs/YV45bDKLH0YXigHBClwtHkkoXOiBJwUwBEKk3gL+daW2PU1TERmCiM8t8k6MGsq4tAOQznDZPMtIYUIRxfaV5vEZWcKLfL1WekZepe1tDJrCK98UHY6EFnhCVsJhigkKO8RXlXs9VqVIzSwihr9tCVctOulnczOV6Ts4VRZuHgVHuUPSx2pgvvMab5nC55kgnKlI4SM7E5UMSsmcc1pdR3gbNn4Q00+k+MQXLtljC5a5YDckq66CkH5avkD2B67ytqKIGhv2KKhzDbZ0qXJDyrKDyJvhqyh1UsIWozHaID5WHFEMO2AJko9t1aR29kCnZD6LT94Gt0FzrbOkiZqHaZwiJPq4zOiDer5fOmky1KVDt1mRb4oyAbH2itN9skk+mU7zVrPCrOZegs4Zxz5hOnekL56CaMiyaS6q0P3Fo0I4tcKvdD5ZrV6ZnqqWY3fI8lpATxcomTGMCyLRWcFcUmnp92lcLI2u7Xdy39vNv38wI0OhmOPbWbleH8h91FMo58wGmMeBiC5XkR2LyXonkdIvsmrMueCLG6dQU1AmkCleS0Ku/OVSvbeuMJ85uxWWMTaaDpGvOjmkuEj1Jcyaa5xqemU57cYZmQEphUbuIGOKd6ScBNBNZ6ye6qAPZ2D6zy9VBh8vSxPQqXsSgaaQGD9xgbKDB4W8bqKWw32vIm/WrLo31wkYPzF1fFD8Kn1txfWTTs6/TIF3zny+0/pBFYZ0/LzqwaQ7vZ/fp4y/K7aNo+5nMvuiPGxs/nNWHv+/q1m0RmrBzVd+2m88b/Cqv2Dm2VTXWYLiXs+sGXheNCnEzKeqnnnRKrM9MOIJMAt2AI6mxGJh1wXIXk3biz6USVndNHIdCmiNYTRyHsfOKQRgT7ggnoDGmlKqn0lJuZf4eK1DdgYh+5exfho7g7LmSFaowgCf6+7IClMNCYA1/w7xSqkaVv99n95QWIjD4RaxCbffJFeVLsQpCzLCrcIE6R+k9o3+sL4T8kuONCHQIu1U/9GLU881KFH7RiRMPc3ZnWQXDrffJT49hAIOcBU61Dg2Ta5+yZGNipzUlNcxHGIuaj2mXAMuZirObG3Q6Wwf9sv5OFt8bhKfLOi5UHcIsE6ntzAyQFM8hn2difr2sj3DrAL6qOS26V/4edE3BKbljQ5jScCoTmRr5v/eVv/s98ndcRUyq/8T33Ak1IS7TvEJOISMuTXvObdOxAiQlRxcVdTGwpDueWAy3xJQMfjveU0fyrkiYvGChdcE5ya760HigchpWVh2tAJWhwladgQLtM2+YY3Ngj1meH+lHLMc7aYg1DEGGicZtCIjp9D4VUjtraY8HPerrdgVzSDWu8QH8aDDRwf3z+hye9BHyDYzqVWZnzE7VrYQk452L3GDNmiWFpX0UGYbN+uFj8+vzuVqTcWJVn0rIp93DpLZzlA1xK2oTJPatI5myOj3kHNVoD68G8qLOvrbypnVTarPrpjWu7eI53Y7CSKkjOrKp87B+LQbAROfTYkS1ANja8QOzLoSz77iuUuwktVk5qFfKFUhz6/QsV3wS6uVOdmjlTloYZsVG3nJV5oKyxWSjjkiFpFmWmBahOM7nGDidgFGXXOWcbQW+oVRbWy4z0hciWSkhDdWsjMY48/BSSvZxaRymTJ5JdBnQyWMaL64SFJm8d+DOJCd6mETDmYvEs5TNmazj84p/mUGV+AyBNJAatRYw82JzZzkzeUVuc/iKoyQov3Z2JXmTEBXLIJ51Q+IMMPKBkpmsAkea9QdAXQUTcI2EIEKLkozbrir74DjpvCkcCj7I0/fL9Sxbqjkd6wriRgg6R8PCgeS9xn+3+qdQw8B1rtda3Vgg8bvD42ejQ/QJmP01dBV4/JfVY/fcWfHwaYP+4Dq/XoN0gzNoSlvqkUZ4NwY7Fs/rJisAl5wChDY6mXASUsT/3Z+jW+G/nejinSKYZDK5hUIL+mLllS+irPzz+gZTY7GMJxKfqRIwFZnQabNLE9SQY6FEAM7tZuHHcb6F5n6QIaKAq+llCunwbpciFyaN3sTX+cBlsgKYL0BioHTsa2GcQjsCTrc3oC3tuUxxv0hZvf971FZ//NRPHjMv8/irrvqPJ8t8nqHGXu8mpqH789hUuSYeCwF3SHv8ZRDRWXH912KZlbiwIa6cjf1TrvewgQWQt39wuFzdFeHDwy68Mg+eMk7GNBYoclDpD91rSyWzHVjtATuqeVtlR3rx7jYF8Al79lnb7tK8dh8uAjVIPHstc/jj0wyqKI8N2G545+X4AJHO7gI1VZ89KrAN7h4xUC3qskGQKzGgMIB5Qw3xl6Muf2T9Zwvx+ar9/Kr9/Mox/P/Qfka0s44la9yIHSigYF+elO5mYz6fmv4czidifNzcfq/cT3iC93E/v9VpYpJ71gQwTAGO36zn6+WBiN6vJt+9Gp+dpyenx+fHz48PazooIIZw5Qo0wfqrdFsC3sb9NoousufqFxWWLsITZOQug+FkwmM2erJwfr2BzjxeTcXL+bsvpAorySJ4HLhiBeIQ8rD1GSDCj1CBSWRND9IWIegafbOO/Rod9CpNEm4dTz0WIyWwpEaQjAjZltOG3ufYS436QUaaINIbEy95d19C7LKa7P5wAPUMVB1j5WIwfeipJnBp9G42+f7ZlZ/dJCXcmzfgvjhSH4SKGXqIA1zkQnXMYJh5R52Y/PrZiRB+F6XdI6f9ZMPRIsoobkNgZ3fewbhxyw7Fw9tvGq6K3HT5dLyvJPoWMB+0Ua5FijvecLbqRpfvQUOUBUOCEF4LEBTZHx048DZXDTH2xDTtPrWNOs3OMy64aRhHG6ReRSmRJEzEhLbvAv/Kgz/xj0ssk3YnzB7ISWjsWFNmCNuJlDjNfcbya/KFDQ7TFtncuVaXmSTyh3NBlSaRAZ2liYuLw3r7Fi4bQpzi7xvc0zhsIIxtkHiDhphiBZUBQxgWMeQOarlnjVVLHLe5LF2tnkoTKvOxi3nDccruo2IzyPIiOfHLK5ZiCd6xFjgJH+JIVFtlFd0Gugh7rlYXX2i6Y8LvCviwQA7TlKtx7UNmaYOSIxAmAqaYinbiinwSh4cACo3kEzJQnXSByAxr9rCpgTYGro2aevyd6TdNs3HB8ZICTDZIRhcbusvi1mTzRlAtO3eJVCd9vS5dGo0giYLz5pKFAQUqGdlqK5dvQuVWkFpnCABSj8srZ6nyQB1GZO8kvioTW7yvyVS3w0f1G77LN5JQg3vlsOgPRWaCpMPbKo75/HndpTH28INN0Y9rDo31ClJH0SJDio4JaS+wGlZjpYB6TsMbjWhpQR+14c89ncexJBYixLWNYz9KRp6rkChznLagHR9mrphlb89jJcqSVZi8VPbDyMxV9Ot3m+PKC4mh4fQFvqy9TKFY6WjDFlwn0cSK6GRdjKNMGEFIEQlEqOBeUyS9bJmJVJZeJxthC9ZVVUiBvivmpawHpLmALAdRJvcy02wYjyi5nCQgoRITUWqXXBU519n8sgBSe6f8i1+C9ET3yRfDdkUrZuX6Cv5sbwZNpcz+pV7K7BGmsgcpCvVoGP1ZUX5OQNXvywwROggnisUuQRbD1CZrQtrATmA+kPVMDdtZglLS3iMX9VmtLza3maAbQKnrOadpU+WNKF6pIFoXF9k5kxadXl81HnuPlFfSl3TNsC4KsEOkpqO63MVqvtxS+IW+XoJwsPHpiWgjKrRRkp9on2ZLvg/FBf7NaXE329myqC4xtWglWJa0tFjXe1WRC9Hin5Grzpc4Neij8Ey3zpAN0ByBBHOQrSIYub2Uk3arKXBOF0CdYVjWfizWsHU0KimQBbJ87hyQlhas4BzS8SEeyGYI93N34IAJsBI5gw8b4PWI5VV1mTGu5Z0jLRR0hg91VSXrpym/3jIhlnO9qq12wJN4NU7Ojl+evx2djpPJWQKy3p8nL8Yvks7oDH53+snbyfmr4zfnCXxxOjo6/z45fpmMjr5P/mdy9KKfjP/35HR8dpYcn0Jnk9cnh5MxPJ0cPT9882Jy9F3yDFoeHZ8nh5PXk3Po9vyYhpTOJuMz7O71+PT5K/g5ejY5nJx/38e4tMn5Efb78vgUBM2T0en55Pmbw9FpcvLm9OT4bAxTeAEdH02OXp7COOPX46NzkDKP4Fky/jP8SM5ejQ4PcTDobfQG1nCKs0yeH598fwqC7Xny6vjwxRgePhvD7EbPDsc8GCzt+eFo8rqfvBi9Hn03plbH0A+uED/kOSZvX43xIY45gv89P58cH+Finh8fUQHfPqz19Nw1fjs5G/eT0enkDLfl5enxa1wmbiy0OaZuoOXRmPvBTQ/PBj7B32/Oxq7L5MV4dAi9nWFjXqh+DhSdkFOaXmwR06Sp4ihRAqZLSty6rFwZwtJVHcyqDbfmZFrrUttCk2sgv9CQ31MV8h83WMFZvpAn19kKMHIpkxhsMf2WfPGC6koD8iifZXgx367LxfP1CnWxKxyrr/YYxJEpJja7xvjAfvKXuhKHazmn+Y9Urxn9id5vs3KBelhYXkrJqrIlLHWF
decompcab11=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
decompcab12=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
decompcab13=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
decompcab14=vYMFAFNnhvhEyZ+T9PcY8DGeGlslyLUB7fbsFJc5L7TNDC9NVoiin7ItTG0wESRvDQcOayh/h2rGRtHi9A3BuOnWRiOIHxlqTxCHJeFNUPjUIyM9h2KIP/iGpXxVnW2LyKsSxX25LPFaDm+bAvUyX6GqxGljbSoZmJ6LnPAVqRc5yzFsgq8KA+xbZ9t1+a9tMbNVmE4M3pjepIDXRXlW+CoAH1ijDu+naHs8UlQdKp36jkrK6oISGafDDOTFcDYkjMQZYmuocmzlQPNA4KkvlyXmHdLGTbJencPOQtvk1PX1tC0ECqr/viphEPj+2U+V/5s/QKEhLOIOXib3Qel0FQrD8uzXBx8MckopXC2V9VoMVf9hZiBwMzELM8r+CzXIjK01DZJ5Ryb4NJI8joNnHqsb50tS5SdG2xqRu1TNuxfDe6JvPu3r6JkDQ2Bbfbn4IyaQYrGSwa/UDdUQThWhq6bwn5jYhBXZ6/wmYrFU9lMUMtDOmxmmo5uTM0LEE6GtaMwe9Fqb2NsrKbPAnT3uJMEZ/mw6o+Fji+p0jkg/FaXhBf21ohgIBQRJSE9sKoVZwIbqcuy5aEBnZturBTnUocGYEdPT4ekNnAJ4sf29RlRG2+G87qABSHtevOff6fh4+ifhQ+ysKJo3cWGSubKkVeqBpr1I7W/XidyTgK0nLCkku3gy34V8tfJmaLpOq3Epjf+Z1bcwaRecPYEuG2T7JRZNQKzkrzoM6kqnXvrwHjVGWoWeqi31ReWAyBhBQFzFtalPOF1XK/acNh4VOoGuOEg5a56yzqwDVlwWsLKcJivqHnRPE3vv+nK4rATfc1iicrpWBYx9CW0+tFdW1/nqQmLkLV3Z6oIATZLUCpSnoMlIAfOMl4x98NM53VvaB1ozij9keG5PMi0loGKbnMsbh5Hn0Ed+MVocEyAkyMAm6qpXHj882e2ot0zxu97sPF12MROFyNe1HJ6M99lKZeoUHFszC2d69aiRNshPU2cBCFTn48QuAkIDUM+6whH6bnJ8HREdAOz4VNtrSszfSxl62d6S4Y8WJ0MKf8BrCAe4dzbc5acsRR8XMNjfT9DuGN2l7FCLe6g03BEt/WpW0mvS5XWv2RPDkXuEaLkaVSeB4zIDkXPCLSquBzHfup2ctF6/otQpdZbHYJpG1JruHtm7kbomaKXdvrixobOiZ0csya6pRtBMzh4bfRsHhlQy8HEqI63ZljAe2mZXemMN9GwiDSmkgNAxXZvVOF6zLy3MMMo+1FUyrqDqRvlwd7P6RT8SVXwo9u+Hffqisz+CgiLNijNPXsD78B3jlwpxP4uyarDTpjg7ZUmDe7/7etvUX5+W66+L9TuFx/5wEPMVfZj8vK3L5G9Z8np+voLTF6gwdxbdO4vunUX3zqLb7jKqrKuw+AkhIkxX2mgD7FW+gZWDasXAmHUXxdyYgs9W1enAJjWtN1Vl059izoqCNGeTjhOVavP9GtPvbHZmSEUDMvKhBfkoy0bjwcufH6KobjMuDwavnvz48ufZKxjxV29oCHXofCTPaTOvy6sNWqv1RspPYDd99fLnbx7Ovn/yCCbESB+j8OHse8pxjkzQt5n8cjDY1Df8bVhbjbGgG4PnG2GU7vYYAtcmsfaKvETYqqu6miPsBcaPqqSsMAKT5BlFws2vtjPCrVZloTcqfPMEYT+m6gD0HA/nKpHDAhNTUinX53BcCWpoku06f5eXK8M7WRR1LWmYsvyQNzy24D9zTuxsty8QVFsZ7oPc8yJXhPr6vbDyo41LwQxM7FzbVUg+p6ZKs6cCgUVIQdhljiIZuoJS6gJDQ4tWtvUcXxivXp519rcer8v8rJyTkQB9jif2cIn7vc5PRSjhvEFw0iT1nPq1aHDiomoMa0Ixwx3OUDEpVZF9m1/QCQaxymAhCq5nM9gytyt0Hj9KhkYFHnqdjzrKLJ2vGqCf0CbPaNzSFfrqJtZ92Eu4TjZ15hYTsbTpcuF7/eegOxqnxXrDV+II4H91E7NU4fuB10SQOMAeJs+IT0l9YLq66T6N6Co2bGIcT9y2TZJ4pJDHaIuBeM+yB7aYHbNChQz8BjND1fzfNTtUoz/bDNmrfH3L+vLmG6TxJ4dqaed84E5qig1FHBgxTb+8a0OE1KPHaFf4g9uCdKaYY3d2zamK5lc/L3GekkjRd1vhwDrwDmFP9a7HdH1YIb3A2xN1y8NGJ+7JV2aXfwYHj8hyE7G9IL99LWA8jfa21R240/nWPPYlHxvl0Ji1Fe7TyItcfeOwFY+B6UgrFnZ2/OatQF52tOJ1EWsETNr/lDYAK14T9ltbwp7VMAgmJWWMxcGoq0D6DO9e0PE63e1/KclMD79GY9+6WEU61/HWiPUPfxDtnwml4BDMw7d4acP57Zx+El9kaotwtgfVv/Ba89xE50IHu7PZ6bYEnXg9m31xbmfLfA7nIxRslmeK0PqWX6QpaJi/oEnDpDibKHE+8YTRxFvWE3eBTMxo8sqYJMF2MBiYYDlgCBX7lMLdKF4/cRi2qnB1utw2c6XamrBAhM7CW7UZKsgUk5dCB+P/x/qMktVXN3NlVkIDCyFk/LIqTyklDuL+wdGFMp2y5SZXiUgxp1QFfQvzNVeGk0IDFmJWE2X2wII5XDC/lnBGio0MOVQeOLDA5EfyVkScCR30Vjpiq5R48/PyXZGEabaNu/AR7Y2yKGEw3K4vPEci6eLirNNVRVp+jqjbUOLZ5pz1b6g34/Ss6fDp06fDidOcY83H1HJ0Pzl8eBJkvcMKcO9+0Ob+4pyITFlHUNjAy3iKrTrG8tAO6nBD/E8VQux91Q5hQvWGSxV1qL4ASW7PQ5HPnXFc0A6ejnBSKRdcV/r5dZEVRJPJl5OEvCrgvHwkS8MpiCNySeS8npp8WcxWVb5ovBKc9TNJfh3i+kCPqHm1WhVkHm2GH8YD5zgAJQ94RZlD5gzXTUoY+zOr+VWw1J3QWTx4mr8NLe9a6nnMBI8f5jXBGCvidQVUGDJlEI+Nz55COg5QYDvKJ5e+arkEEWTLu5lhFuOidrz47iUvGOnRHA8QdHPtPCH4K4xnRGGSkLEerUZsT4GP2NKFeE5HZPXKKHwRfnv9Z+QA9pqQ9OITdTjBUtClJtu832gVAeioCthMkI/L+bBfEfjtMDItd9AobzhqtxHYlpoDsoc69BhtPF+RTfurJssyyiMYTB7ZFe6NCh54zNwicUv9WLyHHadJHULPYsJsiDE0iIpMnCWYMjU5OJivqlM81gGLpqbMC1pVC4LmB/mkoftUs6muzNwmW9aSYL0ilYkuq65AGPs9MKpP8Vat0dvD1PWV0RN06udrQmdIuwVmetszm10nflKqjKVZ2XBgtTJQZq/5f1QarvYZCppx5OaSOejYbHv5pjlCsIsF5aM70b00icGCsVBkzj6RSLSDp0Q0jWHljuD1SErp7WZ58CceUv2dM6buQld9iQ+zOKJBIEL9BxMpOu2fu5EQ5VWllrTmr64JZM2Ot+c5gpOwD8fCBw12A/tnbE8InuxZkdw5xN/OhsnAwbhdFpxc23F/CFa99ntQKwvvPbT9daZuD3pIWpXHm9xgpbMF2YaN0PU3nFsLJOUMJ5jMugTAwB0kIDXG6Ex431vvepvyy1JF3E6sJ949CrEiRZ02CFBF+QfdaF7m6y2Bep8Wc4rDZgC8s+0qr82nNcP2zc+rC8opoPBI1agKKYIrtEkFY8YLRuol2i2HpwKmQC3qVJ/+UrT1SYMmHUHKX8j0tFENv3GEBVIoFAQxwt64CIajk89WSMWZudcNsUff+pV2WyJ3D7abEDKky+xsiHR1rKeNrGcx73Pty/o++5LTjADVVRuHXK3Y62OlWahffBUTCEV+50vGHrLJimsqwvx0dgLmw24HLfKyR3WhROVeDsSqIynpG/HAUbfVMOnf6ojEt4rGWR2FkBieNmEoBSJeRapj7MJRQ6coCV2l26U1N34qdGIG3EjrldQDeXU3wHtB2cRFsIOS5IbNgalBGTfYawzpEYkzNUcO5ZbzvyCZcEKhzfn4YH4C/yzwnwN+f8AZVpp/HxyAFBS/1pX+ccJa6DH9C1vAibrxpdwNR+aWPnuk8jK8pDf/DxkG+ew7F6lVQ0vNXW1z20aS/q5fgVCXAiBTXCtXd1unMq1NxU6Va33rVJy91J2oYyACkhhTgBYg9bK2//v1090zGAwGJO3dD5eqWCQx6Onpmenp6dckL4SlE92nVoQvRFfyB7lcCL8y7vwCEe7rc1PiIYmPFyQLxVayjrHqm/U0br9LLo9pzMV1iE9tinh4Dd4Uq7vpyMrmjcjUnE+ole53YJQLRtiDFh398hW4OOUunAUGcaZYr5803pe1Mw075mSM4nYM14Khw7WO8ZLF1mfCPubckItFybV4xxDMUchW36ulFoBmLyLDsklI5UIenWRQ2wfxiwyC52l4KOGj7B8cEL/TlYDUI8wbYnjyto9rJeMy55IdifPDEO5xUV7DV2z3oiJRgQgjPnLOOCIRqTmpuvGcVSVjZ7RwGwNht4/kuFmdENdQTtLuBe8A+rp98Q4VUrCteBCcX7TusGAtDWXHcaK/0G18NAh79ENVQpMcvX97EkmaK9a00oD1G1vK3HlVFJB4HJWX+XX9gd6SPoHEZAex2pOzZWLuT19LI6aLIAn/YE7p0UBdTqfGFSsZ8uXVVVHThZL4HTvOSL+8HyGEbiUYJ2GD2w2rsZHdWZ0UG60tUbcdrFEdp5Q+pER7LqoudrVeZNDXbxY3OIZ5+7AnpKnVDfcWoLKdinQsiWhiiWiFlX8WDfNlI7XH1ImFk9lpyjmxW6jFpBnbhcJs2lT8xvhUmNxNWslTd7VZBadGbl4tfdWXjK0I
decompcab15=Eg2ytYc3tjQTFxy6lBrnrAwr4DWVQVdhK43LxYVvNquq4T7gswbhBRNkps7Nyrtr0ZNId6wi3TGLdO0Z5At7Xzd930vyYBzd799+FwFs3JjCEQ20jpIzvYli2apxVGecvZhWb9krQ7B7viQpO2wIUcuLWJKU+Yj+OPlXcT+Gf6yUNeD6Cpw72URHVlx3sZvgeEvPvArYVCRGJmWwud66V/Dz0+7NCtk1MxCkj0WQtnPiCNdfORvrdXF7x4yRbleNshuAjQSsk+2Rrtq1rkct+wW+zHVl9tk0mjUaV2l0R2I4F7STw+yaJp7DpFySGOfBZgCh8bZujXXuuii54kNumVvxSIRCYbC/bZb32YqLZ/NuW4EAi9UGTqJFvn0+VGiBy+CUWAcMtXShmcbPdpL8FzUQSilwdmHX1bGVjN/TKnbNlghLK+nAXWJdVghNY0dBGqeUAVuyZ7b7mDcCnS9cCc52mu/kCPXTsdzRzLIbtde2kV11o3bVjXaSgPHh7QEFSVYjHSitkOsM7Bmb5ZbDBkS1jZUgOmriznY1RTAYNkhgXtsRYArY2sID4T8YSmMCvrerU3hVQ7Xh3t97ZoctADpW2h+z5SoqshpF+egScF8tc9SIkTOHTs7oupLjhwZ/fWPNxs1B2Ijhy4Rfa9CQS2yXHMN6pVZHGGy4TVVo5mPiJbjwbOB696VDGoSmJZovaGE11hkCt+l5Vc+xWle4LnseLrSBCShaTfBP0k1Gh9mURkFlwY8gJNpcYQGeRsgL0fQu/ALA2vWa78v81bIWtdNd4iOoCp/WAoIgmxIWGo45W7FFKAALDxLr8T5Z3GCwR26j1FLr52KxIQ55X6BeYZ53+AKfPGHO0HbbBk/b8FC3p44Ckhf/siFwyTIQIEu/i6WTPjBLGzvcjeBKBGHAfsQdmiAn7oSzPVp4v6cM/3eDnEIUZz96+HIa/Rvvzt8nBEFcJpKYSYELmygs4u1JIwUHL56LJuymQFQ6KsKod8fqSZKMyQtqAyTeVT9BbNis9cWyAvMhRNeQD4TqRl7raltIbENWYpHJDxw3Ru4h9VwhdL3+pVITmc5i5/AY2ORmvrFWV9ntZZ5Fj6dGEf04luklEQda6OQxTVUnbWnRKoL0Rl3VjvDCKldEBbldadUu/jr2q22dpGOJV2iKaavup7sK3ZftPgCyojo36OzFwXsE+1Xv1P5d2VpGtnHzUHKFcI4dp0EwPc91VeWd9DKXWfc7FrqQAFRWYpyGInnlWcBJhiD2UsKIUwXuOV7hC0ao1zwwTuOb5yrYBYXz5xe+Yj0dgmbuVgpMAbj1WbyDJjwjMLReDtlVOR1J11iTJB1rxzg0wHEAz7T1StBl1+UchkHc0T4QrdKVVJmVumsPuPc9FBC2iDvVBTur2Xh/Zz3oPE8k1qXdDO0K6bYQDxW7EbhJiE288hO4f5u7fONbqAcWuE3SJZZ9MoAPEbeJOY6Vvrw8kZo0cZymraOJoL1vj9rVVQYhk7shhG0v9DnQSVN8Ceh2FHJry/fCYstgx9E2FA+W7JtJ3B3Om9Mons+hwJ/PNQ26aPP3Lp8QSoMmLy8r85IkCHjzziRDK+E/BDdFGzvHv9xmJa1v63Lfzfy/M7mZWevqUSW5ITO5SuKVeKAWgvXfNQDgmWo+IqboCe6MuTkdvbSvmbonOt/2TVTZLVjbZqpU+0preTkYjuJ47j2Umlp0t/Qzy1iUHwefcg02zvky/9um2Lj1UNl7rpO3fUeBiu1VKRzKm0oO+O9XJoxbu6FgxkPsw1KatsNv1P1v1L1GC4PdGr241tk2WsBSPDurOthdrwiRnUb5evBFwTM7JnvgycFwhgvJf8MOuxoTkYZ8p87pz8XBYO2uUFqeXogLZ771NqGZdr/Cga6AW7Dy6Uk4F7KSk05maedIGE/dMTwti1VbzfxqWUJGDfjWd+AeW7htWiFOFmuc/zkdSXiNvb8hhgPNqinEwQU4VL76TV79zQaiGwdoH8qO9I0Cpo3fShSlrgjfNuOYNa9JrzDnVNvrKYq6FXvnxA2wGsPiNM+u6b5LUVOxQvId4vPWrVtkpmrqstRijg4lbboCQ+6HG5hC77JFcSyKK7wRBI9J6sA9DVVi5dMs3lperUu1Yc+JvaukOVWg2ZROt6s5q/b8QLjOIjSJnrWWtCgDJ2EutZa8PUln1sZbZ7wfJdffUc5JMe6dDsEKbcFDIh08Q82hn/T5D8eKtXHS1e0tneMt1frxOy5BfuDmyNFRXkP9xrfSjCmfbyOkg5qJ7Ok9m7R8pN0g16w42RSuE8WQwNCOqq4kO9be4/q5goIfRzNb23eO5//rgrDBgJYUfnrwlp1oanD3TvLmylShzZwi0Gzye8CPyNSiqUNg7qrEu+ahEOUXEa4tJTt2K3/XT/rWEilDHiY7ZR+iKi76qmy4PY1uEwflndvBBL06LPyFM2Y/Cfx7OGLD85oZWYNTatwW5ZVaUbZwb5KqFlwIq3b1Ruw6fuL3v1RrrWIeQGnqyjLRcXQyFpdDBv9g5TEYV57M+eMX1lRVNmF3m30g3De1qZo+cB4htemqyGpOxCJNkep0MljsaFaOoqMo6WDqj4RwTx1GnFdz2IDm7QTpsrsd2H6vKtbkm+WmNaxZxY3FtfTW1iS6NSZOrpRsynphMGsiA2yBThyT0aZJ9h+eY0n/KlPIfVbpWK/a4JJsw2KDYaU5dtcaRYY0/pv2lsHmhsmwhOsvUaMnvHWo5ch2XyI33W2aG/H1KIsHsXeyRY3N7jwkpuRdjSwmpuh0V7Z+X6y56dBaYbNww+tfhQk4xNoaakjqc11WWEpSJ8DOYRsfJq8SHgJRXh4Q65jS2zjpcCUJkiygd/evhkd9zhms4Na4dyv2ftXep887/JG3W6k2wIwvBrgUMQin2U/sv8XqHH52sLt2mdtpKCzWOSDMGsrCSWHbc8M0fO7lTmN9/VjH4Ra0z4J1nX2w58cnnLsu3NCp91C25dEGx3JX3SU7RiFN5J4kq3n9ZOeQYfl7x71qOZ0B8SE43OE2OB4BhuAQswlsZpNewEMopVPpu6AHdsdfeHA4312c93H77uLCX+J5cbkx1Zpu4QFyXQSyag84xXafTUyqmnT4XilaN9PR9gvmjs4DCJgsN73rEvRzG5tEpz9OZ3kKQXoY7qydNII5hjb4ixcvfnj317evOFXYq9c/vPvPn968fX0afdu8fPkSGkILule7husxBqvXsPj1UHAQ0AYZiIjDcOb5G/H1IO5oKoPSk4esLo2XnLpRdJp7OlCY3tBdaFiWcqO/CnrsHYfde+pn72YQ+xfBlLzhJATZiqNFzt7ViY3R/3FZN+uufvGQS4terYtSPEWcWk58xKujzxXe5Jxc+hYHWa8qkuVaYaL152r0yMorCBDMydtqn4c4J++XSLWYEUfMmqdubdNOlxmrjE3sCIQ1J3xH1MgwniKpXUGnfmneIOCtLiCgRH0qmjlfdjT3U1np12BxCNuaeLH93G1iACCOvwo1kPFoai8HLRzb/XQyZq/yW6ehPDgCravw8DlYH9e+FsBtbzHXwHyrWZyzYAf1T2I/2YQZkf2pnxlcoZuyDPU9NHmjZKR8symQF1PW5QjRfONI7aImZpz9Bc6XreHbdjZxTLecY/r5hffcgpALMEwBrH/ZE6Cp+ODDYYnQCrqdBs7A741IQGPshCXYBxaGX+ywfXCyJW12C2g0Fdbhvpf2JmfCcg/h+kVIjo4c2B0wtgdD11NfvtzW9dbufRQcW3mP+P3evwB0eAq+aBq+fio+PHzhTISn4sNDajaXbZoaFyu7/8Rbo75P+3s7q695Z+vfdl/rD3vuasdBZRwlElpF3CT15F6BOTEua1C0uupmW1RO2qEKDKStmm4+LLI/EktDXRicxV7bideO311yekF9QbLDh1ung7tLyY6xdHLTB3HNq83lqtgX42DrHXgH39mC/RD6kUmUsJO9fPw8/dhWqGlndpurTvu67dgtGWgoFhvOYEoZ6iC38SozIX7bXb18eAh1Et6FlmxeW29bJXBBw6Fltxe+pyONN+vUuKQ5wrX23at3dOypJ606LktASFVD5fJBpNK8mKMkjZpOQN8HaAvl1ITq0dZKimczOFDN6D9V+XvPR/J4FH46K+VxOfB4LY/XcTfdCFL4fCieCOlcC8FfPiHLaXyH+gni0nnw59f//eu7n1+91yJW5/G/AFjW8L9rdb2NLwsSH3PzDfKQ+Yyog4JTHJtfuG6Bfl5e2U/2+fKWI3zMz0vbye8cQCafie9szGc6OrIn+MrKVxNRI99ksOZbsyhKC7u5qR7MZ6ga7Ocb9jSWL3+vxA9XvrHnCjZRPEb9CZBuXhfXNEiiT3yeHf/9++P/mc82z59nz49nm6urq/zi/PnxfwQfHMW6xpYQ9+ctpeYom5lbv8vD6D38dllCZ/UxMnCLcgSRJeyy3RRGx8TzhqnUd+2EviUmU096nYkAblzuFllJvERfdaHRzWFCAv01NKYwjJm1v2xU6asy7CHsAStkuyZot4gRKzMkTKJNWVewuT1Um5wzXBO6Czj16GuSEzVbiA8j6nmWyGVbs6eyhF7QgJO0E5lhEIWljnWUYITcobMRsAHvHIdkJgRRt0+LQPbbJpRIyLCOb5uU73s6j8g2M19V1wjjMeZIhaivtF0H2tpLnrTyLnnmarbCQ6GWj36j0faYcLrxGupIhFNZXGdrIgyn34IvZQ6jFFG3mTD9pJXIwdpq6ObVs1qLrqBqugXdWOttEldJvsiA3di1LEMX2lqlzCVZNljn6q/cV7ferTp2ZmsX5LnB6mLivIlbAY29KjgyaVHzNdsOoG8SUfyntsmwAqotfwZ82Jds
decompcab16=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

# --------------------------------------------------------------------------------
# rpatool by Shizmob 9a58396 2019-02-22T17:31:07.000Z
#   https://github.com/Shizmob/rpatool
# --------------------------------------------------------------------------------
rpatool01=IyEvdXNyL2Jpbi9lbnYgcHl0aG9uDQpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IHByaW50X2Z1bmN0aW9uDQppbXBvcnQgc3lzDQppbXBvcnQgb3MNCnN5cy5wYXRoLmFwcGVuZCgnLi4nKQ0KaW1wb3J0IHJlbnB5Lm9iamVjdA0KaW1wb3J0IHJlbnB5LmNvbmZpZw0KaW1wb3J0IHJlbnB5LmxvYWRlcg0KdHJ5Og0KICAgIGltcG9ydCByZW5weS51dGlsDQpleGNlcHQ6DQogICAgcGFzcw0KY2xhc3MgUmVuUHlBcmNoaXZlOg0KICAgIGZpbGUgPSBOb25lDQogICAgaGFuZGxlID0gTm9uZQ0KDQogICAgZmlsZXMgPSB7fQ0KICAgIGluZGV4ZXMgPSB7fQ0KDQogICAgZGVmIF9faW5pdF9fKHNlbGYsIGZpbGUpOg0KICAgICAgICBzZWxmLmxvYWQoZmlsZSkNCg0KICAgICMgQ29udmVydHMgYSBmaWxlbmFtZSB0byBhcmNoaXZlIGZvcm1hdC4NCiAgICBkZWYgY29udmVydF9maWxlbmFtZShzZWxmLCBmaWxlbmFtZSk6DQogICAgICAgIChkcml2ZSwgZmlsZW5hbWUpID0gb3MucGF0aC5zcGxpdGRyaXZlKG9zLnBhdGgubm9ybXBhdGgoZmlsZW5hbWUpLnJlcGxhY2Uob3Muc2VwLCAnLycpKQ0KICAgICAgICByZXR1cm4gZmlsZW5hbWUNCg0KDQogICAgIyBMaXN0IGZpbGVzIGluIGFyY2hpdmUgYW5kIGN1cnJlbnQgaW50ZXJuYWwgc3RvcmFnZS4NCiAgICBkZWYgbGlzdChzZWxmKToNCiAgICAgICAgcmV0dXJuIGxpc3Qoc2VsZi5pbmRleGVzKQ0KDQogICAgIyBSZWFkIGZpbGUgZnJvbSBhcmNoaXZlIG9yIGludGVybmFsIHN0b3JhZ2UuDQogICAgZGVmIHJlYWQoc2VsZiwgZmlsZW5hbWUpOg0KICAgICAgICBmaWxlbmFtZSA9IHNlbGYuY29udmVydF9maWxlbmFtZShmaWxlbmFtZSkNCiAgICAgICAgaWYgbGVuKHNlbGYuaW5kZXhlc1tmaWxlbmFtZV1bMF0pID09IDM6DQogICAgICAgICAgICAob2Zmc2V0LCBsZW5ndGgsIHByZWZpeCkgPSBzZWxmLmluZGV4ZXNbZmlsZW5hbWVdWzBdDQogICAgICAgIGVsaWYgbGVuKHNlbGYuaW5kZXhlc1tmaWxlbmFtZV1bMF0pID09IDQ6DQogICAgICAgICAgICAob2Zmc2V0LCBsZW5ndGgsIHByZWZpeCwgdGVtcDIpID0gc2VsZi5pbmRleGVzW2ZpbGVuYW1lXVswXQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgKG9mZnNldCwgbGVuZ3RoKSA9IHNlbGYuaW5kZXhlc1tmaWxlbmFtZV1bMF0NCiAgICAgICAgICAgIHByZWZpeCA9ICcnDQogICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKHByZWZpeCwgYnl0ZXMpOg0KICAgICAgICAgICAgICAgIHByZWZpeCA9IHByZWZpeC5lbmNvZGUoImxhdGluLTEiKQ0KICAgICAgICBzZWxmLmhhbmRsZS5zZWVrKG9mZnNldCkNCiAgICAgICAgcmV0dXJuIHByZWZpeCArIHNlbGYuaGFuZGxlLnJlYWQobGVuZ3RoIC0gbGVuKHByZWZpeCkpDQoNCiAgICAjIExvYWQgYXJjaGl2ZS4NCiAgICBkZWYgbG9hZChzZWxmLCBmaWxlbmFtZSk6DQogICAgICAgIHNlbGYuZmlsZSA9IGZpbGVuYW1lDQogICAgICAgIHNlbGYuZmlsZXMgPSB7fQ0KICAgICAgICBzZWxmLmhhbmRsZSA9IG9wZW4oc2VsZi5maWxlLCAncmInKQ0KICAgICAgICBiYXNlLCBleHQgPSBmaWxlbmFtZS5zcGxpdCgiLiIpDQogICAgICAgIHJlbnB5LmNvbmZpZy5hcmNoaXZlcy5hcHBlbmQoYmFzZSkNCiAgICAgICAgcmVucHkuY29uZmlnLnNlYXJjaHBhdGggPSBbb3MucGF0aC5kaXJuYW1lKG9zLnBhdGgucmVhbHBhdGgoc2VsZi5maWxlKSldDQogICAgICAgIHJlbnB5LmNvbmZpZy5iYXNlZGlyID0gb3MucGF0aC5kaXJuYW1lKHJlbnB5LmNvbmZpZy5zZWFyY2hwYXRoWzBdKQ0KICAgICAgICByZW5weS5sb2FkZXIuaW5kZXhfYXJjaGl2ZXMoKQ0KICAgICAgICBpdGVtcyA9IHJlbnB5LmxvYWRlci5hcmNoaXZlc1swXVsxXS5pdGVtcygpDQogICAgICAgIGZvciBmaWxlLCBpbmRleCBpbiBpdGVtczoNCiAgICAgICAgICAgIHNlbGYuaW5kZXhlc1tmaWxlXSA9IGluZGV4DQoNCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6DQogICAgaW1wb3J0IGFyZ3BhcnNlDQoNCiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcigNCiAgICAgICAgZGVzY3JpcHRpb249J0EgdG9vbCBmb3Igd29ya2luZyB3aXRoIFJlblwnUHkgYXJjaGl2ZSBmaWxlcy4nLA0KICAgICAgICBlcGlsb2c9J1RoZSBGSUxFIGFyZ3VtZW50IGNhbiBvcHRpb25hbGx5IGJlIGluIEFSQ0hJVkU9UkVBTCBmb3JtYXQsIG1hcHBpbmcgYSBmaWxlIGluIHRoZSBhcmNoaXZlIGZpbGUgc3lzdGVtIHRvIGEgZmlsZSBvbiB5b3VyIHJlYWwgZmlsZSBzeXN0ZW0uIEFuIGV4YW1wbGUgb2YgdGhpczogcnBhdG9vbCAteCB0ZXN0LnJwYSBzY3JpcHQucnB5Yz0vaG9tZS9mb28vdGVzdC5ycHljJywNCiAgICAgICAgYWRkX2hlbHA9RmFsc2UpDQoNCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCdhcmNoaXZlJywgbWV0YXZhcj0nQVJDSElWRScsIGhlbHA9J1RoZSBSZW5cJ3B5IGFyY2hpdmUgZmlsZSB0byBvcGVyYXRlIG9uLicpDQogICAgYXJndW1lbnRzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQ0KICAgIGFyY2hpdmUgPSBhcmd1bWVudHMuYXJjaGl2ZQ0KICAgIG91dHB1dCA9ICcuJw0KICAgICMgdHJ5Og0KICAgIGFyY2hpdmUgPSBSZW5QeUFyY2hpdmUoYXJjaGl2ZSkNCg0KICAgIGZpbGVzID0gYXJjaGl2ZS5saXN0KCkNCg0KICAgICMgQ3JlYXRlIG91dHB1dCBkaXJlY3RvcnkgaWYgbm90IHByZXNlbnQuDQogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKG91dHB1dCk6DQogICAgICAgIG9zLm1ha2VkaXJzKG91dHB1dCkNCg0KICAgICMgSXRlcmF0ZSBvdmVyIGZpbGVzIHRvIGV4dHJhY3QuDQogICAgZm9yIGZpbGVuYW1lIGluIGZpbGVzOg0KICAgICAgICBvdXRmaWxlID0gZmlsZW5hbWUNCiAgICAgICAgY29udGVudHMgPSBhcmNoaXZlLnJlYWQoZmlsZW5hbWUpDQoNCiAgICAgICAgIyBDcmVhdGUgb3V0cHV0IGRpcmVjdG9yeSBmb3IgZmlsZSBpZiBub3QgcHJlc2VudC4NCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmpvaW4ob3V0cHV0LCBvdXRmaWxlKSkpOg0KICAgICAgICAgICAgb3MubWFrZWRpcnMob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguam9pbihvdXRwdXQsIG91dGZpbGUpKSkNCg0KICAgICAgICB3aXRoIG9wZW4ob3MucGF0aC5qb2luKG91dHB1dCwgb3V0ZmlsZSksICd3YicpIGFzIGZpbGU6DQogICAgICAgICAgICBmaWxlLndyaXRlKGNvbnRlbnRzKQ0KICAgICMgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlcnI6DQogICAgIyAgICAgcHJpbnQoZXJyKQ0KICAgICMgICAgIHN5cy5leGl0KDEpDQo=

# --------------------------------------------------------------------------------
# DO NOT EDIT BELOW THIS LINE
# --------------------------------------------------------------------------------
PROMPT_COMMAND=
echo -en "\033]0;UnRen.bat ${version}\a"

# --------------------------------------------------------------------------------
# SPLASH SCREEN
# --------------------------------------------------------------------------------
clear
echo " "
echo "   __  __      ____               __          __"
echo "  / / / /___  / __ \___  ____    / /_  ____ _/ /_"
echo " / / / / __ \/ /_/ / _ \/ __ \  / __ \/ __ \`/ __/"
echo "/ /_/ / / / / _, _/  __/ / / / / /_/ / /_/ / /_"
echo "\____/_/ /_/_/ |_|\___/_/ /_(_)_.___/\__,_/\__/"
echo " v ${version} ${versiondate}"
echo " From UnRen.bat and UnRen-Ultrahack"
echo " Sam @ www.f95zone.to"
echo " VepsrP @ www.f95zone.to"
echo " "
echo "----------------------------------------------------"
echo " "

currentdir="$(pwd)"
extracteddir="$(pwd)"
pythondir=${currentdir}"/../lib/linux-x86_64"
gamedir=${currentdir}

if [ -d "${currentdir}/game" ] && [ -d "${currentdir}/lib" ] && [ -d "${currentdir}/renpy" ]
then
    pythondir="${currentdir}/lib/linux-x86_64"
    gamedir="${currentdir}/game"
fi

if [ ! -f "${pythondir}/python" ]
then
    pythondir=${currentdir}"/../lib/linux-i686"
    gamedir=${currentdir}

	if [ -d "${currentdir}/game" ] && [ -d "${currentdir}/lib" ] && [ -d "${currentdir}/renpy" ]
    then
        pythondir="${currentdir}/lib/linux-i686"
        gamedir=${currentdir}"/game"
    fi
fi

if [ ! -f "${pythondir}/python" ]
then
    pythondir=${currentdir}"/../lib/py2-linux-i686"
    gamedir=${currentdir}

	if [ -d "${currentdir}/game" ] && [ -d "${currentdir}/lib" ] && [ -d "${currentdir}/renpy" ]
    then
        pythondir=${currentdir}"/lib/py2-linux-i686"
        gamedir=${currentdir}"/game"
    fi
fi

if [ ! -f "${pythondir}/python" ]
then
    pythondir=${currentdir}"/../lib/py2-linux-x86_64"
    gamedir=${currentdir}

	if [ -d "${currentdir}/game" ] && [ -d "${currentdir}/lib" ] && [ -d "${currentdir}/renpy" ]
    then
        pythondir=${currentdir}"/lib/py2-linux-x86_64"
        gamedir=${currentdir}"/game"
    fi
fi

if [ ! -f "${pythondir}/python" ]
then
    pythondir=${currentdir}"/../lib/py3-linux-i686"
    gamedir=${currentdir}

	if [ -d "${currentdir}/game" ] && [ -d "${currentdir}/lib" ] && [ -d "${currentdir}/renpy" ]
    then
        pythondir=${currentdir}"/lib/py3-linux-i686"
        gamedir=${currentdir}"/game"
    fi
fi

if [ ! -f "${pythondir}/python" ]
then
    pythondir=${currentdir}"/../lib/py3-linux-x86_64"
    gamedir=${currentdir}

	if [ -d "${currentdir}/game" ] && [ -d "${currentdir}/lib" ] && [ -d "${currentdir}/renpy" ]
    then
        pythondir=${currentdir}"/lib/py3-linux-x86_64"
        gamedir=${currentdir}"/game"
    fi
fi

if [ ! -f "${pythondir}/python" ]
then
    echo "${pythondir}/python"
	echo "! Error: Cannot locate python.exe, unable to continue."
	echo "    Are you sure we're in the game's root or game directory?"
	echo " "
    read -r -s -n 1 -p "Press any key to exit..."
    clear
	exit
fi

gamename="$(find . -maxdepth 1 -name '*.sh' ! -iname 'UnRen-Linux.sh' | sed -e 's/.sh$//' -e 's/\.\///')"

chmod +x "${gamename}.sh"
cd "${pythondir}" || exit
chmod +x "${gamename}"
chmod +x python
cd "${gamedir}" || exit

function menuselect()
{
    if [ "$1" == "1" ] || [ "$1" == "8" ] || [ "$1" == "9" ]
    then
        extract
    elif [ "$1" == "2" ]
    then
        decompile
    elif [ "$1" == "3" ] || [ "$1" == "7" ]
    then
        console
    elif [ "$1" == "4" ]
    then
        quick
    elif [ "$1" == "5" ]
    then
        skip
    elif [ "$1" == "6" ]
    then
        rollback
    else
        finishdefault
    fi
}

function menu()
{
    # --------------------------------------------------------------------------------
    # Menu selection
    # --------------------------------------------------------------------------------
    exitoption=
    option=
    echo " Available Options:"
    echo "   1) Extract RPA packages (in game folder)"
    echo "   2) Decompile rpyc files (in game folder)"
    echo "   3) Enable Console and Developer Menu"
    echo "   4) Enable Quick Save and Quick Load"
    echo "   5) Force enable skipping of unseen content"
    echo "   6) Force enable rollback (scroll wheel)"
    echo "   7) Options 3-6"
    echo "   8) Options 1-6"
    echo "   9) Options 1-6 + Deobfuscate rpyc"
    echo " "
    read -r -s -n 1 -p "     Enter number 1-8 (or any other key to Exit)" option
    echo " "
    echo "----------------------------------------------------"
    echo " "
    echo " "
    menuselect "${option}"
}

function extract()
{
    # --------------------------------------------------------------------------------
    # Write _rpatool.py from our base64 strings
    # --------------------------------------------------------------------------------
    rpatool=${extracteddir}"/_rpatool.py"
    echo "  Creating rpatool..."
    if [ -f "${rpatool}.tmp" ]
    then
        rm "${rpatool}.tmp" 2> /dev/null
    fi
    if [ -f "${rpatool}" ]
    then
        rm "${rpatool}" 2> /dev/null
    fi

    {
        echo "${rpatool01}"
    } >> "${rpatool}.tmp" 2>&1

    base64 -d "${rpatool}.tmp" > "${rpatool}" 2>&1
    echo " "

    # --------------------------------------------------------------------------------
    # Unpack RPA
    # --------------------------------------------------------------------------------
    echo " "
    echo "   Rename RPA archives after extraction?"
    echo " "
    read -r -s -n 1 -p "     Enter (y/n):" renamerpa
    echo " "

    echo "  Searching for RPA packages"
    cd "${gamedir}" || exit
    
    export PYTHONPATH=$PYTHONPATH:${pythondir}
    chmod +x "${pythondir}/python"

    if compgen -G "*.rpa" > /dev/null; then
        for file in *.rpa
        do
            stat -c "Unpacking %n - %s bytes " "${file}"
            runCommand=${pythondir}'/python '${rpatool}' '${file} > /dev/null
            if [ "${renamerpa}" == "y" ]
            then
                echo "     RPA files renamed."
                ${runCommand}
                mv "${file}" "${file}.bak"
            else
                echo "     RPA files not renamed."
                ${runCommand}
            fi
        done
    else
        echo "     No RPA files found."
    fi

    # --------------------------------------------------------------------------------
    # Clean up
    # --------------------------------------------------------------------------------
    echo "  Cleaning up ..."

    rm "${rpatool}.tmp" 2> /dev/null
    rm "${rpatool}" 2> /dev/null

    echo " "
    if [ "${option}" == "8" ] || [ "${option}" == "9" ]
    then
        menuselect 2
    else
        finish
    fi
}

function decompile()
{
    # --------------------------------------------------------------------------------
    # Write to temporary file first, then convert. Needed due to binary file
    # --------------------------------------------------------------------------------
    decompcab="${currentdir}/_decomp.cab"
    decompilerdir="${currentdir}/decompiler"
    unrpycpy="${currentdir}/unrpyc.py"
    deobfuscate="${currentdir}/deobfuscate.py"
    pycache="${currentdir}/__pycache__"
    if ! compgen -G "${gamedir}/*.rpyc" > /dev/null;
    then
        echo "No .rpyc files found in ${gamedir}!"
        echo " "
        finish
    fi
    if [ -f "${decompcab}.tmp" ]
    then
        rm "${decompcab}.tmp" 2> /dev/null
    fi
    if [ -f "${decompcab}" ]
    then
        rm "${decompcab}" 2> /dev/null
    fi
    if [ -d "${decompilerdir}" ]
    then
        rm -rf "${decompilerdir}" 2> /dev/null
    fi

    if [ -f "${unrpycpy}.tmp" ]
    then
        rm "${decompcab}.tmp" 2> /dev/null
    fi
    if [ -f "${unrpycpy}" ]
    then
        rm "${decompcab}" 2> /dev/null
    fi

    {
        echo "${decompcab01}"
        echo "${decompcab02}"
        echo "${decompcab03}"
        echo "${decompcab04}"
        echo "${decompcab05}"
        echo "${decompcab06}"
        echo "${decompcab07}"
        echo "${decompcab08}"
        echo "${decompcab09}"
        echo "${decompcab10}"
        echo "${decompcab11}"
        echo "${decompcab12}"
        echo "${decompcab13}"
        echo "${decompcab14}"
        echo "${decompcab15}"
        echo "${decompcab16}"
    } >> "${decompcab}"'.tmp' 2>&1

    base64 -d "${decompcab}.tmp" > "${decompcab}" 2>&1
    echo " "

    # --------------------------------------------------------------------------------
    # Once converted, extract the cab file. Needs to be a cab file due to expand.exe
    # --------------------------------------------------------------------------------
    # echo   Extracting _decomp.cab...
    mkdir "${decompilerdir}"
    cabextract -d "${decompilerdir}" "${decompcab}"
    mv "${decompilerdir}/unrpyc.py" "${unrpycpy}" > /dev/null
    mv "${decompilerdir}/deobfuscate.py" "${deobfuscate}" > /dev/null

    # --------------------------------------------------------------------------------
    # Decompile rpyc files, changing work dir as we recurse from the game directory
    # --------------------------------------------------------------------------------
    echo " Searching for rpyc files..."
    echo " "
    cd "${currentdir}/game" || exit
    lastdir=$(pwd)
    nofirstecho=true

    # shellcheck disable=SC2034  # set PYTHONPATH, unused variable
    PYTHONPATH=${pythondir};${currentdir};${decompilerdir}
    chmod +x "${pythondir}/python"

    # shellcheck disable=SC2044  # Loop through folders for *.rpyc, -exec is called
    for file in $(find . -name "*.rpyc" -type f -exec echo \{\} \;)
    do
        if [ -d "$file" ];
        then
            if [ ! "${lastdir}" == "$(pwd)" ]
            then
                lastdir=$(pwd)
            fi
        else
            if [ ! "${lastdir}" == "$(pwd)" ] && [ ! "${nofirstecho}" == true ]
            then
                nofirstecho=false
            fi
        fi

        stat -c "Decompiling %n - %s bytes " "${file}"
        if [ "${option}" == "9" ]
        then
            runCommand=${pythondir}'/python '${currentdir}'/unrpyc.py --clobber --init-offset --try-harder '${file}
        else
            runCommand=${pythondir}'/python '${currentdir}'/unrpyc.py --clobber --init-offset '${file}
        fi
        echo "${runCommand}"
        ${runCommand}
    done

    echo " "

    # --------------------------------------------------------------------------------
    # Clean up and return to our original working directory
    # --------------------------------------------------------------------------------
    echo " Cleaning up ..."
    rm "${unrpycpy}" 2> /dev/null
    rm "${unrpycpy}o" 2> /dev/null
    rm "${decompcab}.tmp" 2> /dev/null
    rm "${decompcab}" 2> /dev/null
    rm "${deobfuscate}" 2> /dev/null
    rm "${deobfuscate}o" 2> /dev/null

    rm -rf "${decompilerdir}" 2> /dev/null
    rm -rf "${pycache}" 2> /dev/null

    echo " "
    if [ "${option}" == "8" ] || [ "${option}" == "9" ]
    then
        menuselect 3
    else
        finish
    fi
}

function console()
{
    # --------------------------------------------------------------------------------
    # Drop our console/dev mode enabler into the game folder
    # --------------------------------------------------------------------------------
    echo " Creating Developer/Console file..."
    consolefile=${gamedir}"/unren-dev.rpy"
    if [ -f "${consolefile}" ]
    then
        rm "${consolefile}" 2> /dev/null
    fi

    unrenconsole01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIGNvbmZpZy5kZXZlbG9wZXIgPSBUcnVlDQogICAgY29uZmlnLmNvbnNvbGUgPSBUcnVl

    {
        echo "${unrenconsole01}"
    } >> "${consolefile}.tmp" 2>&1

    base64 -d "${consolefile}.tmp" > "${consolefile}" 2>&1
    rm "${consolefile}.tmp" 2> /dev/null

    echo "  + Console: SHIFT+O"
    echo "  + Dev Menu: SHIFT+D"
    echo " "

    if [ "${option}" == "7" ] || [ "${option}" == "8" ] || [ "${option}" == "9" ]
    then
        menuselect 4
    else
        finish
    fi
}

function quick()
{
    # --------------------------------------------------------------------------------
    # Drop our Quick Save/Load file into the game folder
    # --------------------------------------------------------------------------------
    echo " Creating Quick Save/Quick Load file..."
    quickfile=${gamedir}"/unren-quick.rpy"
    if [ -f "${quickfile}" ]
    then
        rm "${quickfile}" 2> /dev/null
    fi

    unrenquick01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIHRyeToNCiAgICAgICAgY29uZmlnLnVuZGVybGF5WzBdLmtleW1hcFsncXVpY2tTYXZlJ10gPSBRdWlja1NhdmUoKQ0KICAgICAgICBjb25maWcua2V5bWFwWydxdWlja1NhdmUnXSA9ICdLX0Y1Jw0KICAgICAgICBjb25maWcudW5kZXJsYXlbMF0ua2V5bWFwWydxdWlja0xvYWQnXSA9IFF1aWNrTG9hZCgpDQogICAgICAgIGNvbmZpZy5rZXltYXBbJ3F1aWNrTG9hZCddID0gJ0tfRjknDQogICAgZXhjZXB0Og0KICAgICAgICBwYXNz

    {
        echo "${unrenquick01}"
    } >> "${quickfile}.tmp" 2>&1

    base64 -d "${quickfile}.tmp" > "${quickfile}" 2>&1
    rm "${quickfile}.tmp" 2> /dev/null

    echo "  Default hotkeys:"
    echo "  + Quick Save: F5"
    echo "  + Quick Load: F9"
    echo " "

    if [ "${option}" == "7" ] || [ "${option}" == "8" ] || [ "${option}" == "9" ]
    then
        menuselect 5
    else
        finish
    fi
}

function skip()
{
    # --------------------------------------------------------------------------------
    # Drop our skip file into the game folder
    # --------------------------------------------------------------------------------
    echo " Creating skip file..."
    skipfile=${gamedir}"/unren-skip.rpy"
    if [ -f "${skipfile}" ]
    then
        rm "${skipfile}" 2> /dev/null
        rm "${skipfile}.tmp" 2> /dev/null
    fi

    unrenskip01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIF9wcmVmZXJlbmNlcy5za2lwX3Vuc2VlbiA9IFRydWUNCiAgICByZW5weS5nYW1lLnByZWZlcmVuY2VzLnNraXBfdW5zZWVuID0gVHJ1ZQ0KICAgIHJlbnB5LmNvbmZpZy5hbGxvd19za2lwcGluZyA9IFRydWUNCiAgICByZW5weS5jb25maWcuZmFzdF9za2lwcGluZyA9IFRydWUNCiAgICB0cnk6DQogICAgICAgIGNvbmZpZy5rZXltYXBbJ3NraXAnXSA9IFsgJ0tfTENUUkwnLCAnS19SQ1RSTCcgXQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgcGFzcw0K

    {
        echo "${unrenskip01}"
    } >> "${skipfile}.tmp" 2>&1

    base64 -d "${skipfile}.tmp" > "${skipfile}" 2>&1
    rm "${skipfile}.tmp" 2> /dev/null

    echo "  + You can now skip all text using TAB and CTRL keys"
    echo " "

    if [ "${option}" == "7" ] || [ "${option}" == "8" ] || [ "${option}" == "9" ]
    then
        menuselect 6
    else
        finish
    fi
}

function rollback()
{
    # --------------------------------------------------------------------------------
    # Drop our rollback file into the game folder
    # --------------------------------------------------------------------------------
    echo " Creating rollback file..."
    rollbackfile=${gamedir}"/unren-rollback.rpy"
    if [ -f "${rollbackfile}" ]
    then
        rm "${rollbackfile}" 2> /dev/null
    fi

    unrenrollback01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIHJlbnB5LmNvbmZpZy5yb2xsYmFja19lbmFibGVkID0gVHJ1ZQ0KICAgIHJlbnB5LmNvbmZpZy5oYXJkX3JvbGxiYWNrX2xpbWl0ID0gMjU2DQogICAgcmVucHkuY29uZmlnLnJvbGxiYWNrX2xlbmd0aCA9IDI1Ng0KICAgIGRlZiB1bnJlbl9ub2Jsb2NrKCAqYXJncywgKiprd2FyZ3MgKToNCiAgICAgICAgcmV0dXJuDQogICAgcmVucHkuYmxvY2tfcm9sbGJhY2sgPSB1bnJlbl9ub2Jsb2NrDQogICAgdHJ5Og0KICAgICAgICBjb25maWcua2V5bWFwWydyb2xsYmFjayddID0gWyAnS19QQUdFVVAnLCAncmVwZWF0X0tfUEFHRVVQJywgJ0tfQUNfQkFDSycsICdtb3VzZWRvd25fNCcgXQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgcGFzcw==

    {
        echo "${unrenrollback01}"
    } >> "${rollbackfile}.tmp" 2>&1

    base64 -d "${rollbackfile}.tmp" > "${rollbackfile}" 2>&1
    rm "${rollbackfile}.tmp" 2> /dev/null

    echo "    + You can now rollback using the scrollwheel"
    echo " "

    finish
}

function finish()
{
    # --------------------------------------------------------------------------------
    # We are done
    # --------------------------------------------------------------------------------
    echo "----------------------------------------------------"
    echo " "
    echo "  Finished!"
    echo " "
    read -r -s -n 1 -p '     Enter "1" to go back to the menu, or any other key to exit:' exitoption
    echo " "
    echo "----------------------------------------------------"
    echo " "
    if [ "${exitoption}" == '1' ]
    then
        menu
    else
        clear
        exit
    fi
}

menu
